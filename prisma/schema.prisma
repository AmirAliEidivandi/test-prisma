// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum MessageRole {
  USER
  ASSISTANT
}

model User {
  id               String       @id @default(uuid())
  profile_id        String       @map("profile_id")
  kid              String       @map("kid")
  created_at        DateTime     @default(now()) @map("created_at")
  updated_at        DateTime     @updatedAt @map("updated_at")
  deleted_at        DateTime?    @map("deleted_at")
  chats            Chat[]
}

model Chat {
  id               String    @id @default(uuid())
  title            String
  model            String
  created_at        DateTime  @default(now()) @map("created_at")
  updated_at        DateTime  @updatedAt @map("updated_at")
  deleted_at        DateTime? @map("deleted_at")
  user_id           String    @map("user_id")
  user             User      @relation(fields: [user_id], references: [id])
  messages         Message[]
}

model Message {
  id               String    @id @default(uuid())
  content          String
  role             MessageRole
  chat_id           String    @map("chat_id")
  chat             Chat      @relation(fields: [chat_id], references: [id])
  created_at        DateTime  @default(now()) @map("created_at")
  updated_at        DateTime  @updatedAt @map("updated_at")
  deleted_at        DateTime? @map("deleted_at")
  order            Int
  metadata         Json?
}